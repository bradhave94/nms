// | -------------------------------------------------------------
// | Grid
// | -------------------------------------------------------------

@use "breakpoint" as *;

.container {
  margin: 0 auto;
  padding: 0 calc(var(--gap-default)/2);
  max-width: 100%;

  @include breakpoint(medium) {
    padding: 0 var(--gap-default);
  }

  @include breakpoint(large) {
    padding: 0 calc(var(--gap-default)/2);
    max-width: 1200px;
  }

  &.stretch {
    max-width: 100%;
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: var(--gap-default);
  align-items: start;

  &.no-gutters {
    grid-gap: 0;
  }

  &.equal-height {
    align-items: stretch;
  }

  > .x-start {
    justify-self: start;
  }

  > .x-center {
    justify-self: center;
  }

  > .x-end {
    justify-self: end;
  }

  > .y-start {
    align-self: start;
  }

  > .y-center {
    align-self: center;
  }

  > .y-end {
    align-self: end;
  }

  @for $i from 1 through 12 {
    > .small-#{$i} {
      grid-column-end: span $i;
    }

    > .offset-small-#{$i} {
      grid-column-start: calc(#{$i} + 1);
    }

    &.small-grid-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }

  @include breakpoint(medium) {
    @for $i from 1 through 12 {
      > .medium-#{$i} {
        grid-column-end: span $i;
      }

      > .offset-medium-#{$i} {
        grid-column-start: calc(#{$i} + 1);
      }

      &.medium-grid-#{$i} {
        grid-template-columns: repeat(#{$i}, 1fr);
      }
    }
  }

  @include breakpoint(large) {
    @for $i from 1 through 12 {
      > .large-#{$i} {
        grid-column-end: span $i;
      }

      > .offset-large-#{$i} {
        grid-column-start: calc(#{$i} + 1);
      }

      &.large-grid-#{$i} {
        grid-template-columns: repeat(#{$i}, 1fr);
      }
    }
  }
}
