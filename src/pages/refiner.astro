---
import 'tabulator-tables/dist/css/tabulator_simple.min.css';

import Layout from '../layouts/Layout.astro';
import Table from '../components/Table.astro';
import refinery from '../data/Refinery.json';

import { getById, getSlug } from '../utils/lookup.js';

function getInputs(elements) {
	let inputs = [];
	elements.forEach((element) => {
		let i = getById(element.Id);
		inputs.push({
			name: i.Name,
			amount: element.Quantity,
		});
	});
	return inputs;
}

function createArray(item) {
	let inputs = getInputs(item.Inputs);
	let newItem = {
		input_1: inputs[0],
		input_2: inputs[1],
		input_3: inputs[2],
		output: {
			name: getById(item.Output.Id).Name,
			amount: item.Output.Quantity,
		},
		time: item.Time,
	};
	return newItem;
}

let columns = [
	{ title: 'Input 1', field: 'input_1' },
	{ title: 'Input 2', field: 'input_2' },
	{ title: 'Input 3', field: 'input_3' },
	{ title: 'Output', field: 'output' },
	{ title: 'Time', field: 'time' },
];

const data = refinery.map(createArray);
---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Welcome to <span class="text-gradient">Astro</span></h1>
		<p class="instructions">
			To get started, open the directory <code>src/pages</code> in your project.<br />
			<strong>Code Challenge:</strong> Tweak the "Welcome to Astro" message above.
		</p>
		<div>
            <button id="print-table">Print Table</button>
        </div>
        <label for="fSearch">Search</label>
        <input type="text" id="fSearch" name="fSearch" />
        <table id="example-table">
            <thead>
                <tr>
                    {
                        columns.map((item) => (
                            <>
                                <th>{item.title}</th>
                            </>
                        ))
                    }
                </tr>
            </thead>
            <tbody>
                {
                    data.map((item) => (
                        <>
                            <tr>
                                <td>{item.input_1.name}</td>
                                <td>{item.input_2?.name}</td>
                                <td>{item.input_3?.name}</td>
                                <td>{item.output.name}</td>
                                <td>{item.time}</td>
                            </tr>
                        </>
                    ))
                }
            </tbody>
        </table>
	</main>
</Layout>


<script>
	import { TabulatorFull as Tabulator } from 'tabulator-tables';

	//create Tabulator on DOM element with id "example-table"
	var table = new Tabulator('#example-table', {
		columns: [
			{
				title: 'Input 1',
				field: 'input_1',
				sorterParams: {
					alignEmptyValues: 'bottom',
				},
			},
			{
				title: 'Input 2',
				field: 'input_2',
				sorterParams: {
					alignEmptyValues: 'bottom',
				},
			},
			{
				title: 'Input 3',
				field: 'input_3',
				sorterParams: {
					alignEmptyValues: 'bottom',
				},
			},
			{
				title: 'Output',
				field: 'output',
				sorterParams: {
					alignEmptyValues: 'bottom',
				},
			},
			{
				title: 'Time',
				field: 'time',
				sorterParams: {
					alignEmptyValues: 'bottom',
				},
			},
		],
		initialSort: [
			{ column: 'output', dir: 'asc' }, //sort by this first
		],
        maxHeight:"100%", // use this and version 4.6 of Tabulator
        height: "500px",
		layout: 'fitColumns', //fit columns to width of table (optional)
		pagination: true,
		paginationSize: 25,
		paginationSizeSelector: [10, 25, 50, 100, true], //select list with an "all" option at the end of the list
		paginationCounter: 'rows',
		placeholder: 'No Data Available',
		printHeader: '<h1>Refinery<h1>',
		printAsHtml: true,
	});

	//print button
	document.getElementById('print-table').addEventListener('click', function () {
		table.print(false, true);
	});

	function matchAny(data, filterParams) {
		//data - the data for the row being filtered
		//filterParams - params object passed to the filter
		//RegExp - modifier "i" - case insensitve

		var match = false;
		const regex = RegExp(filterParams.value, 'i');

		for (var key in data) {
			if (regex.test(data[key]) == true) {
				match = true;
			}
		}
		return match;
	}

	const input = document.getElementById('fSearch');
	input.addEventListener('keyup', function () {
		table.setFilter(matchAny, { value: input.value });
		if (input.value == ' ') {
			table.clearFilter();
		}
	});
</script>