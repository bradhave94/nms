---
// Importing required components and data
// Importing required components and data
import Layout from '@layouts/Layout.astro';
import { Image } from 'astro:assets'
import credit from '@assets/img/credits.png';
import products from '@data/Products.json';
import { getById, getSlug, type Item } from '@utils/lookup.js';

// Function to create an array of data for each Products item
const createArray = (item: Item) => {
  // If the item has no inputs, return undefined
  if (!item.RequiredItems || item.RequiredItems.length === 0) return;

  // Map the inputs and get the details of each input item using `getById` function
  const RequiredItems = item.RequiredItems.map((element) => {
    const i: Item | undefined = getById(element.Id);
    // If item is not found, return undefined
    if (!i) return;
    // Return the item details
    return {
      id: i.Id,
      name: i.Name,
      description: i.Description,
      value: i.BaseValueUnits,
      amount: element.Quantity,
      image: i.Icon,
      colour: i.Colour,
    };
  });

  // Combine the inputs and output data in a new object
  const newItem = {
    input_1: RequiredItems[0],
    input_2: RequiredItems[1],
    input_3: RequiredItems[2],
    output: {
      id: item.Id,
      name: item.Name,
      description: item.Description,
      value: item.BaseValueUnits,
      image: item.Icon,
      colour: item.Colour,
    },
    value: item.BaseValueUnits,
  };
  return newItem;
};

// Map the data and create an array of filtered items
const data = products.map(createArray).filter(Boolean);
data.sort((a, b) => b.value - a.value);
---

<Layout
	title="Crafting Guide | No Man's Sky Recipes"
	description="Unlock new possibilities in No Man's Sky with our comprehensive Crafting Guide. Our guide has everything you need to take your game to the next level."
	slug="crafting-guide"
>
	<div
		class="card-header mb-4 p-4 relative flex lg:flex-row flex-col gap-5 items-center justify-between bg-center before:bg-black/80 before:w-full before:h-full before:absolute before:left-0 before:top-0"
		style="background-image: url(/images/resources.png)"
	>
		<div class="flex items-center gap-2 z-10 relative">
			<Image
				class="logo"
				src={import(`../../../assets/img/crafting-guide.png`)}
				sizes={100 + 'px'}
				width={100}
				height={63}
				alt="Refining"
			/>
			<h1 class="text-2xl">Crafting</h1>
		</div>

		<div class="relative text-center">
			<div class="flex gap-2 justify-center" x-data="app">
				<p>Layout:</p>
				<div>
					<a
						href={'/crafting-guide'}
						class="block cursor-pointer select-none rounded-md px-2 transition-colors hover:bg-blue-500 hover:text-black border border-blue-500 peer-checked:bg-blue-500 peer-checked:text-black"
					>
						Table
					</a>
				</div>
				<div>
					<a
						href={'/' + 'crafting-guide' + '/cards'}
						class="block cursor-pointer select-none rounded-md px-2 border transition-colors bg-blue-500 text-black border-blue-500 peer-checked:bg-blue-500 peer-checked:text-black"
					>
						Cards
					</a>
				</div>
			</div>
		</div>

		<div class="flex items-center z-10">
			<div class="tabulator-search relative">
				<input
					class="rounded-md w-full bg-black border-blue-500 focus:border-blue-500 focus:ring-blue-500 peer"
					required
					type="text"
					id="search"
					name="search"
					placeholder=""
				/>
				<label
					class="absolute top-1/2 -translate-y-1/2 left-3 peer-focus:opacity-0 peer-valid:opacity-0"
					for="search">Search</label
				>
			</div>
		</div>
	</div>
	<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 lg:items-start gap-8" id="items">
		{
			data.map((item) => (
				<div class="bg-black rounded-md overflow-hidden">
					<a
						href={getSlug(item.output.id) + item.output.id}
						class="flex flex-col items-center text-lg w-full p-2 transition-opacity hover:opacity-75"
						style={'background: #' + item.output.colour}
					>
						<Image
							src={'https://app.nmsassistant.com/assets/images/' + item.output.image}
							alt={item.output.name}
							sizes="50px"
							width={50}
							height={50}
						/>

						<h4 class="lg:text-lg">
							<span class="output">{item.output.name}</span>
						</h4>
						<p class="flex text-sm items-center gap-2 py-2 pb-4">
							<Image
								src={credit}
								alt="Credits"
								sizes="15px"
								width={15}
								height={15}
							/>
							{item.output.value}
						</p>
					</a>
					<a
						href={getSlug(item.input_1.id) + item.input_1.id}
						class="flex p-2 transition-opacity hover:opacity-75"
						style={'background: #' + item.input_1.colour}
					>
						<div class="mr-4 flex-shrink-0 self-start">
							<Image
								src={
									'https://app.nmsassistant.com/assets/images/' +
									item.input_1.image
								}
								alt={item.input_1.name}
								sizes="50px"
								width={50}
								height={50}
							/>
						</div>
						<div class="flex items-center">
							<h4 class="lg:text-lg">
								{item.input_1.name} x
								<span data-quantity={item.input_1.amount}>
									{item.input_1.amount}
								</span>
							</h4>
						</div>
					</a>
					{item.input_2 ? (
						<a
							href={getSlug(item.input_2.id) + item.input_2.id}
							class="flex p-2 transition-opacity hover:opacity-75"
							style={'background: #' + item.input_2.colour}
						>
							<div class="mr-4 flex-shrink-0 self-start">
								<Image
									src={
										'https://app.nmsassistant.com/assets/images/' +
										item.input_2.image
									}
									alt={item.input_1.name}
									sizes="50px"
									width={50}
									height={50}
								/>
							</div>
							<div class="flex items-center">
								<h4 class="lg:text-lg">
									{item.input_2.name} x
									<span data-quantity={item.input_2.amount}>
										{item.input_2.amount}
									</span>
								</h4>
							</div>
						</a>
					) : null}
					{item.input_3 ? (
						<a
							href={getSlug(item.input_3.id) + item.input_3.id}
							class="flex p-2 transition-opacity hover:opacity-75"
							style={'background: #' + item.input_3.colour}
						>
							<div class="mr-4 flex-shrink-0 self-start">
								<Image
									src={
										'https://app.nmsassistant.com/assets/images/' +
										item.input_3.image
									}
									alt={item.input_3.name}
									sizes="50px"
									width={50}
									height={50}
								/>
							</div>
							<div class="flex items-center">
								<h4 class="lg:text-lg">
									{item.input_3.name} x
									<span data-quantity={item.input_3.amount}>
										{item.input_3.amount}
									</span>
								</h4>
							</div>
						</a>
					) : null}
				</div>
			))
		}
	</div>

	<script>
		const search = document.querySelector('#search');
		const items = document.querySelector('#items');
		const divs = items.querySelectorAll('div.bg-black');
		let debounceTimer;

		function handleSearch() {
			const filter = search.value.toUpperCase();

			divs.forEach((article) => {
				const a = article.querySelector('.output');
				const txtValue = a.textContent || a.innerText;
				const isMatch = txtValue.toUpperCase().includes(filter);

				article.style.display = isMatch ? '' : 'none';
			});
		}

		function debounce(func, delay) {
			clearTimeout(debounceTimer);
			debounceTimer = setTimeout(func, delay);
		}

		search.addEventListener('input', () => debounce(handleSearch, 200));
	</script>
</Layout>
